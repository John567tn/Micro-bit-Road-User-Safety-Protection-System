{"entries":[{"timestamp":1739457778536,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let ultrasonicSensorEcho = DigitalPin.P2; // 超声波传感器的Echo引脚\nlet ultrasonicSensorTrig = DigitalPin.P0; // 超声波传感器的Trig引脚\nlet lightSensorPin = AnalogPin.P2; // 光线传感器连接的引脚\nlet temperatureSensorPin = AnalogPin.P0; // 温度传感器连接的引脚\n\n// 初始化通信模块\nradio.setGroup(1); // 设置无线电通信组\nradio.setTransmitPower(7); // 设置传输功率\n\n// 初始化 AEB 系统（模拟）\nlet isAEBActive = false;\n\n// 用户交互界面\ninput.onButtonPressed(Button.A, () => {\n    isAEBActive = !isAEBActive;\n    if (isAEBActive) {\n        basic.showIcon(IconNames.Yes);\n    } else {\n        basic.showIcon(IconNames.No);\n    }\n});\n\n// 车辆间通信：发送数据\nfunction shareVehicleData(distance: number, temperature: number, lightLevel: number) {\n    let data = {\n        distance: distance.toString(), // 转换为字符串\n        temperature: temperature.toString(), // 转换为字符串\n        lightLevel: lightLevel.toString(), // 转换为字符串\n        timestamp: control.millis().toString() // 转换为字符串\n    };\n    //radio.sendValue(\"data\", JSON.stringify(data)); // 发送数据\n}\n\n// 车辆间通信：接收数据\nradio.onReceivedValue(function (name, value) {\n    if (name == \"data\") {\n      //  let receivedData = JSON.parse(value); // 解析接收到的数据\n        //basic.showString(\"Rx: \" + receivedData.distance);\n    }\n});\n\n// 主循环：检测行人和环境\nbasic.forever(() => {\n    // 读取传感器数据\n    let distance = pins.analogReadPin(AnalogPin.P1); // 模拟读取超声波传感器数据\n    let lightLevel = pins.analogReadPin(lightSensorPin); // 读取光线传感器数据\n    let temperature = pins.analogReadPin(temperatureSensorPin); // 读取温度传感器数据\n\n    // 检测行人或障碍物\n    if (distance < 10 && isAEBActive) {\n        // 触发紧急制动\n        basic.showIcon(IconNames.Sad);\n        triggerEmergencyBrake();\n    } else if (distance < 20) {\n        // 显示警告\n        basic.showIcon(IconNames.Square);\n        triggerWarning();\n    } else {\n        // 安全状态\n        basic.showIcon(IconNames.Happy);\n    }\n\n    // 根据环境调整系统行为\n    if (temperature < 10) {\n        basic.showString(\"Cold\");\n    } else if (temperature > 30) {\n        basic.showString(\"Hot\");\n    }\n\n    if (lightLevel < 50) {\n        basic.showString(\"Dark\");\n    } else {\n        basic.showString(\"Bright\");\n    }\n\n    // 将数据发送到其他车辆\n    shareVehicleData(distance, temperature, lightLevel);\n\n    basic.pause(500); // 每500ms检测一次\n});\n\n// 紧急制动函数\nfunction triggerEmergencyBrake() {\n    pins.digitalWritePin(DigitalPin.P0, 1); // 模拟制动信号\n    basic.pause(1000); // 制动持续时间\n    pins.digitalWritePin(DigitalPin.P0, 0);\n}\n\n// 警告函数\nfunction triggerWarning() {\n    music.playTone(262, music.beat(BeatFraction.Whole)); // 发出警告声音\n}"],[1,"\n"]],"start1":0,"start2":0,"length1":2454,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,","],[0,"\n    "],[-1,"    \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\""],[1,"}"],[0,",\n    "],[-1," "],[-1,"   \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"microbit-dstemp\": \"github:bsiever/microbit-dstemp#v0.1.26\",\n        \"pxt-esp8266\": \"github:cytrontechnologies/pxt-esp8266#v2.0.2\"\n    },\n    \"files\": [\n        \"main.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"\"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":138,"start2":138,"length1":372,"length2":128}]},{"type":"removed","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]},{"timestamp":1739458336448,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,";\n    //"],[-1,"(已被屏蔽)"],[0,"radio.se"]],"start1":890,"start2":890,"length1":22,"length2":16},{"diffs":[[0," // 发送数据"],[-1,"(已被屏蔽)"],[0,"\n}\n\n// 车"]],"start1":944,"start2":944,"length1":22,"length2":16},{"diffs":[[0,"      //"],[-1,"(已被屏蔽)"],[0,"  let re"]],"start1":1043,"start2":1043,"length1":22,"length2":16},{"diffs":[[0,"到的数据"],[-1,"(已被屏蔽)"],[0,"\n   "]],"start1":1098,"start2":1098,"length1":14,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"0.2\""],[-1,",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\""],[0,"\n   "]],"start1":425,"start2":425,"length1":68,"length2":8}]}]},{"timestamp":1739458792856,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"发出警告声音\n}"],[-1,"\n"]],"start1":2470,"start2":2470,"length1":9,"length2":8}]}]},{"timestamp":1739636201398,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"出警告声音\n}\n"],[-1,"let"]],"start1":2471,"start2":2471,"length1":11,"length2":8}]}]},{"timestamp":1739636203153,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"发出警告声音\n}"],[1,"\nlet"]],"start1":2470,"start2":2470,"length1":8,"length2":12}]}]},{"timestamp":1739636226564,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"0); // 每"],[1,"5"],[0,"00ms检测一次"]],"start1":2172,"start2":2172,"length1":16,"length2":17}]}]},{"timestamp":1742452445295,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"Level);\n"],[-1," "],[0,"\n    bas"]],"start1":2145,"start2":2145,"length1":17,"length2":16}]}]},{"timestamp":1742452447860,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"Level);\n"],[1," "],[0,"\n    bas"]],"start1":2145,"start2":2145,"length1":16,"length2":17},{"diffs":[[0,"se(5"],[1,"00"],[0,"); // 每"],[-1,"5"],[1,"00"],[0,"ms检测"]],"start1":2168,"start2":2168,"length1":16,"length2":19}]}]},{"timestamp":1742452456020,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"c.pause("],[1,"1"],[0,"000); //"]],"start1":2298,"start2":2298,"length1":16,"length2":17}]}]},{"timestamp":1742455776138,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"c.pause("],[-1,"2"],[0,"000); //"]],"start1":2298,"start2":2298,"length1":17,"length2":16}]}]},{"timestamp":1742455781126,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"解析接收到的数据"],[1,"(已被屏蔽)"],[0,"\n       "]],"start1":1112,"start2":1112,"length1":16,"length2":22}]}]},{"timestamp":1747121714066,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"    //(已"],[1,"被屏蔽)"],[0,"  let re"]],"start1":1057,"start2":1057,"length1":16,"length2":20}]}]},{"timestamp":1747121717590,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,";\n    }\n"],[-1,"data"],[1,"});"],[0,"\n\n// 车辆间"]],"start1":540,"start2":540,"length1":20,"length2":19},{"diffs":[[0," };\n    "],[1,"//(已被屏蔽)"],[0,"radio.se"]],"start1":888,"start2":888,"length1":16,"length2":24},{"diffs":[[0,"ta)); //"],[1," 发送数据(已被屏蔽)"],[0,"\n}\n\n// 车"]],"start1":945,"start2":945,"length1":16,"length2":27},{"diffs":[[0,") {\n    "],[1,"  //(已"],[0,"  let re"]],"start1":1051,"start2":1051,"length1":16,"length2":22},{"diffs":[[0,"析接收到的数据\n        "],[1,"//"],[0,"basic.showString"]],"start1":1109,"start2":1109,"length1":32,"length2":34}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"用者安全保护系统"],[1," - 复制"],[0,"\",\n    \""]],"start1":18,"start2":18,"length1":16,"length2":21}]}]},{"timestamp":1747123006631,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":533,"start2":533,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// 在此处测试；当此软件包作为插件使用时，将不会编译此软件包。\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1739457778535,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"道路使用者安全保护系统\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1739636201398,"editorVersion":"7.0.57","text":{"main.ts":"let ultrasonicSensorEcho = DigitalPin.P2; // 超声波传感器的Echo引脚\nlet ultrasonicSensorTrig = DigitalPin.P0; // 超声波传感器的Trig引脚\nlet lightSensorPin = AnalogPin.P2; // 光线传感器连接的引脚\nlet temperatureSensorPin = AnalogPin.P0; // 温度传感器连接的引脚\n\n// 初始化通信模块\nradio.setGroup(1); // 设置无线电通信组\nradio.setTransmitPower(7); // 设置传输功率\n\n// 初始化 AEB 系统（模拟）\nlet isAEBActive = false;\n\n// 用户交互界面\ninput.onButtonPressed(Button.A, () => {\n    isAEBActive = !isAEBActive;\n    if (isAEBActive) {\n        basic.showIcon(IconNames.Yes);\n    } else {\n        basic.showIcon(IconNames.No);\n    }\n});\n\n// 车辆间通信：发送数据\nfunction shareVehicleData(distance: number, temperature: number, lightLevel: number) {\n    let data = {\n        distance: distance.toString(), // 转换为字符串\n        temperature: temperature.toString(), // 转换为字符串\n        lightLevel: lightLevel.toString(), // 转换为字符串\n        timestamp: control.millis().toString() // 转换为字符串\n    };\n    //(已被屏蔽)radio.sendValue(\"data\", JSON.stringify(data)); // 发送数据(已被屏蔽)\n}\n\n// 车辆间通信：接收数据\nradio.onReceivedValue(function (name, value) {\n    if (name == \"data\") {\n      //(已被屏蔽)  let receivedData = JSON.parse(value); // 解析接收到的数据(已被屏蔽)\n        //basic.showString(\"Rx: \" + receivedData.distance);\n    }\n});\n\n// 主循环：检测行人和环境\nbasic.forever(() => {\n    // 读取传感器数据\n    let distance = pins.analogReadPin(AnalogPin.P1); // 模拟读取超声波传感器数据\n    let lightLevel = pins.analogReadPin(lightSensorPin); // 读取光线传感器数据\n    let temperature = pins.analogReadPin(temperatureSensorPin); // 读取温度传感器数据\n\n    // 检测行人或障碍物\n    if (distance < 10 && isAEBActive) {\n        // 触发紧急制动\n        basic.showIcon(IconNames.Sad);\n        triggerEmergencyBrake();\n    } else if (distance < 20) {\n        // 显示警告\n        basic.showIcon(IconNames.Square);\n        triggerWarning();\n    } else {\n        // 安全状态\n        basic.showIcon(IconNames.Happy);\n    }\n\n    // 根据环境调整系统行为\n    if (temperature < 10) {\n        basic.showString(\"Cold\");\n    } else if (temperature > 30) {\n        basic.showString(\"Hot\");\n    }\n\n    if (lightLevel < 50) {\n        basic.showString(\"Dark\");\n    } else {\n        basic.showString(\"Bright\");\n    }\n\n    // 将数据发送到其他车辆\n    shareVehicleData(distance, temperature, lightLevel);\n\n    basic.pause(500); // 每500ms检测一次\n});\n\n// 紧急制动函数\nfunction triggerEmergencyBrake() {\n    pins.digitalWritePin(DigitalPin.P0, 1); // 模拟制动信号\n    basic.pause(1000); // 制动持续时间\n    pins.digitalWritePin(DigitalPin.P0, 0);\n}\n\n// 警告函数\nfunction triggerWarning() {\n    music.playTone(262, music.beat(BeatFraction.Whole)); // 发出警告声音\n}","pxt.json":"{\n    \"name\": \"道路使用者安全保护系统\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"microbit-dstemp\": \"github:bsiever/microbit-dstemp#v0.1.26\",\n        \"pxt-esp8266\": \"github:cytrontechnologies/pxt-esp8266#v2.0.2\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1742455776138,"editorVersion":"7.0.57","text":{"main.ts":"let ultrasonicSensorEcho = DigitalPin.P2; // 超声波传感器的Echo引脚\nlet ultrasonicSensorTrig = DigitalPin.P0; // 超声波传感器的Trig引脚\nlet lightSensorPin = AnalogPin.P2; // 光线传感器连接的引脚\nlet temperatureSensorPin = AnalogPin.P0; // 温度传感器连接的引脚\n\n// 初始化通信模块\nradio.setGroup(1); // 设置无线电通信组\nradio.setTransmitPower(7); // 设置传输功率\n\n// 初始化 AEB 系统（模拟）\nlet isAEBActive = false;\n\n// 用户交互界面\ninput.onButtonPressed(Button.A, () => {\n    isAEBActive = !isAEBActive;\n    if (isAEBActive) {\n        basic.showIcon(IconNames.Yes);\n    } else {\n        basic.showIcon(IconNames.No);\n    }\n});\n\n// 车辆间通信：发送数据\nfunction shareVehicleData(distance: number, temperature: number, lightLevel: number) {\n    let data = {\n        distance: distance.toString(), // 转换为字符串\n        temperature: temperature.toString(), // 转换为字符串\n        lightLevel: lightLevel.toString(), // 转换为字符串\n        timestamp: control.millis().toString() // 转换为字符串\n    };\n    //(已被屏蔽)radio.sendValue(\"data\", JSON.stringify(data)); // 发送数据(已被屏蔽)\n}\n\n// 车辆间通信：接收数据\nradio.onReceivedValue(function (name, value) {\n    if (name == \"data\") {\n      //(已被屏蔽)  let receivedData = JSON.parse(value); // 解析接收到的数据(已被屏蔽)\n        //basic.showString(\"Rx: \" + receivedData.distance);\n    }\n});\n\n// 主循环：检测行人和环境\nbasic.forever(() => {\n    // 读取传感器数据\n    let distance = pins.analogReadPin(AnalogPin.P1); // 模拟读取超声波传感器数据\n    let lightLevel = pins.analogReadPin(lightSensorPin); // 读取光线传感器数据\n    let temperature = pins.analogReadPin(temperatureSensorPin); // 读取温度传感器数据\n\n    // 检测行人或障碍物\n    if (distance < 10 && isAEBActive) {\n        // 触发紧急制动\n        basic.showIcon(IconNames.Sad);\n        triggerEmergencyBrake();\n    } else if (distance < 20) {\n        // 显示警告\n        basic.showIcon(IconNames.Square);\n        triggerWarning();\n    } else {\n        // 安全状态\n        basic.showIcon(IconNames.Happy);\n    }\n\n    // 根据环境调整系统行为\n    if (temperature < 10) {\n        basic.showString(\"Cold\");\n    } else if (temperature > 30) {\n        basic.showString(\"Hot\");\n    }\n\n    if (lightLevel < 50) {\n        basic.showString(\"Dark\");\n    } else {\n        basic.showString(\"Bright\");\n    }\n\n    // 将数据发送到其他车辆\n    shareVehicleData(distance, temperature, lightLevel);\n\n    basic.pause(5); // 每5ms检测一次\n});\n\n// 紧急制动函数\nfunction triggerEmergencyBrake() {\n    pins.digitalWritePin(DigitalPin.P0, 1); // 模拟制动信号\n    basic.pause(1000); // 制动持续时间\n    pins.digitalWritePin(DigitalPin.P0, 0);\n}\n\n// 警告函数\nfunction triggerWarning() {\n    music.playTone(262, music.beat(BeatFraction.Whole)); // 发出警告声音\n}","pxt.json":"{\n    \"name\": \"道路使用者安全保护系统\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"microbit-dstemp\": \"github:bsiever/microbit-dstemp#v0.1.26\",\n        \"pxt-esp8266\": \"github:cytrontechnologies/pxt-esp8266#v2.0.2\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1747121714066,"editorVersion":"7.0.61","text":{"main.ts":"let ultrasonicSensorEcho = DigitalPin.P2; // 超声波传感器的Echo引脚\nlet ultrasonicSensorTrig = DigitalPin.P0; // 超声波传感器的Trig引脚\nlet lightSensorPin = AnalogPin.P2; // 光线传感器连接的引脚\nlet temperatureSensorPin = AnalogPin.P0; // 温度传感器连接的引脚\n\n// 初始化通信模块\nradio.setGroup(1); // 设置无线电通信组\nradio.setTransmitPower(7); // 设置传输功率\n\n// 初始化 AEB 系统（模拟）\nlet isAEBActive = false;\n\n// 用户交互界面\ninput.onButtonPressed(Button.A, () => {\n    isAEBActive = !isAEBActive;\n    if (isAEBActive) {\n        basic.showIcon(IconNames.Yes);\n    } else {\n        basic.showIcon(IconNames.No);\n    }\n});\n\n// 车辆间通信：发送数据\nfunction shareVehicleData(distance: number, temperature: number, lightLevel: number) {\n    let data = {\n        distance: distance.toString(), // 转换为字符串\n        temperature: temperature.toString(), // 转换为字符串\n        lightLevel: lightLevel.toString(), // 转换为字符串\n        timestamp: control.millis().toString() // 转换为字符串\n    };\n    //(已被屏蔽)radio.sendValue(\"data\", JSON.stringify(data)); // 发送数据(已被屏蔽)\n}\n\n// 车辆间通信：接收数据\nradio.onReceivedValue(function (name, value) {\n    if (name == \"data\") {\n      //(已被屏蔽)  let receivedData = JSON.parse(value); // 解析接收到的数据(已被屏蔽)\n        //basic.showString(\"Rx: \" + receivedData.distance);\n    }\n});\n\n// 主循环：检测行人和环境\nbasic.forever(() => {\n    // 读取传感器数据\n    let distance = pins.analogReadPin(AnalogPin.P1); // 模拟读取超声波传感器数据\n    let lightLevel = pins.analogReadPin(lightSensorPin); // 读取光线传感器数据\n    let temperature = pins.analogReadPin(temperatureSensorPin); // 读取温度传感器数据\n\n    // 检测行人或障碍物\n    if (distance < 10 && isAEBActive) {\n        // 触发紧急制动\n        basic.showIcon(IconNames.Sad);\n        triggerEmergencyBrake();\n    } else if (distance < 20) {\n        // 显示警告\n        basic.showIcon(IconNames.Square);\n        triggerWarning();\n    } else {\n        // 安全状态\n        basic.showIcon(IconNames.Happy);\n    }\n\n    // 根据环境调整系统行为\n    if (temperature < 10) {\n        basic.showString(\"Cold\");\n    } else if (temperature > 30) {\n        basic.showString(\"Hot\");\n    }\n\n    if (lightLevel < 50) {\n        basic.showString(\"Dark\");\n    } else {\n        basic.showString(\"Bright\");\n    }\n\n    // 将数据发送到其他车辆\n    shareVehicleData(distance, temperature, lightLevel);\n\n    basic.pause(5); // 每5ms检测一次\n});\n\n// 紧急制动函数\nfunction triggerEmergencyBrake() {\n    pins.digitalWritePin(DigitalPin.P0, 1); // 模拟制动信号\n    basic.pause(2000); // 制动持续时间\n    pins.digitalWritePin(DigitalPin.P0, 0);\n}\n\n// 警告函数\nfunction triggerWarning() {\n    music.playTone(262, music.beat(BeatFraction.Whole)); // 发出警告声音\n}","pxt.json":"{\n    \"name\": \"道路使用者安全保护系统 - 复制\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\",\n        \"MakerBit-Ultrasonic\": \"github:1010technologies/pxt-makerbit-ultrasonic#v1.0.8\",\n        \"microbit-dstemp\": \"github:bsiever/microbit-dstemp#v0.1.26\",\n        \"pxt-esp8266\": \"github:cytrontechnologies/pxt-esp8266#v2.0.2\",\n        \"neopixel\": \"github:microsoft/pxt-neopixel#v0.7.6\"\n    },\n    \"files\": [\n        \"main.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1747123006640}